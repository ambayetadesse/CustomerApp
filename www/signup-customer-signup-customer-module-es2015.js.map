{"version":3,"sources":["./src/app/signup-customer/signup-customer-routing.module.ts","./src/app/signup-customer/signup-customer.page.html","./src/app/signup-customer/signup-customer.page.scss","./src/app/signup-customer/signup-customer.module.ts","./src/app/Service/shared.service.ts","./src/app/signup-customer/signup-customer.page.ts"],"names":[],"mappings":"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","file":"signup-customer-signup-customer-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { SignupCustomerPage } from './signup-customer.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SignupCustomerPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class SignupCustomerPageRoutingModule {}\n","export default \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n      <ion-buttons slot=\\\"start\\\"> \\n        <ion-back-button defaultHref=\\\"login\\\"></ion-back-button>\\n      </ion-buttons>\\n      <ion-title>Sign in </ion-title>\\n  </ion-toolbar>\\n  <p color=\\\"primary\\\" style=\\\"padding-left: 20px;padding-top: 20px;background-color: #3880ff;\\\">Create an account with new email address</p>\\n</ion-header>\\n\\n<ion-content>\\n  <form [formGroup]=\\\"regform\\\">\\n    <ion-item>\\n      <ion-label>Full Name</ion-label>\\n      <ion-input formControlName=\\\"FullName\\\" type=\\\"text\\\"></ion-input>\\n    </ion-item>\\n    <ion-item>\\n      <ion-label>Email </ion-label>\\n      <ion-input formControlName=\\\"email\\\" type=\\\"text\\\"></ion-input>\\n    </ion-item>\\n    <!-- <ion-item>\\n      <ion-label>Phone number</ion-label>\\n      <ion-input formControlName=\\\"phonenumber\\\" type=\\\"text\\\"></ion-input>\\n    </ion-item> -->\\n    <ion-item-group>\\n      <ion-row>\\n        <ion-label style=\\\"margin-left: 11px;\\n        padding-top: 11px;\\\">Phone number</ion-label>\\n      </ion-row>\\n      <ion-row>\\n        <ngx-intl-tel-input \\n        style=\\\"margin-left: 24px;\\n        padding-top: 11px;\\\" \\n        [cssClass]=\\\"'custom'\\\"\\n         [preferredCountries]=\\\"preferredCountries\\\"\\n         [enableAutoCountrySelect]=\\\"true\\\"\\n          [enablePlaceholder]=\\\"true\\\" \\n          [searchCountryFlag]=\\\"true\\\"\\n         [searchCountryField]=\\\"[SearchCountryField.Iso2, SearchCountryField.Name]\\\"\\n          [selectFirstCountry]=\\\"true\\\"\\n         [selectedCountryISO]=\\\"CountryISO.Ethiopia\\\"\\n          [maxLength]=\\\"15\\\" [phoneValidation]=\\\"true\\\"\\n         [separateDialCode]=\\\"true\\\"\\n          [numberFormat]=\\\"PhoneNumberFormat.National\\\" name=\\\"phone\\\"\\n         formControlName=\\\"phonenumber\\\" \\n         [(ngModel)]=\\\"phoneNumber\\\">\\n       </ngx-intl-tel-input>\\n      </ion-row>\\n    </ion-item-group>\\n    <ion-item>\\n      <ion-label>Password</ion-label>\\n      <ion-input [type]=\\\"fieldTextType ? 'text' : 'password'\\\" formControlName=\\\"password\\\" [required]></ion-input>\\n      <i class=\\\"fa\\\" [ngClass]=\\\"{'fa-eye-slash': !fieldTextType,'fa-eye': fieldTextType }\\\"\\n        (click)=\\\"toggleFieldTextType()\\\"></i>\\n    </ion-item>\\n    <ion-item>\\n      <ion-label>Confirm Password</ion-label>\\n      <ion-input [type]=\\\"conformPassword ? 'text' : 'password'\\\" formControlName=\\\"confirmPassword\\\" [required]>\\n      </ion-input>\\n      <i class=\\\"fa\\\" [ngClass]=\\\"{'fa-eye-slash': !conformPassword,'fa-eye': conformPassword }\\\" \\n        (click)=\\\"conPassword()\\\"></i>\\n    </ion-item>\\n    <div style=\\\"text-align: center; margin: auto\\\">\\n      <ion-button expand=\\\"full\\\" (click)=\\\"registerAccount()\\\">\\n        <ion-icon slot=\\\"start\\\" name=\\\"add-circle-outline\\\"></ion-icon>\\n        Sign Up\\n      </ion-button>\\n    </div>\\n    <ion-item>\\n      <ion-label style=\\\"text-align: center\\\">Already have an account ?</ion-label>\\n      <button style=\\\"margin-left: -37px; color: #234ada; background-color: #f8f9fa\\\" (click)=\\\"login()\\\">\\n        Login\\n      </button>\\n    </ion-item>\\n  </form>\\n</ion-content>\\n\";","export default \"ion-content ion-item {\\n  padding: 0;\\n  --border-radius: 14px;\\n}\\n\\nion-content ion-searchbar {\\n  --border-radius: 14px;\\n  --background: rgb(243, 243, 243);\\n  margin-top: -13px;\\n}\\n\\nion-content ion-segment {\\n  margin: 5px 0;\\n}\\n\\nion-header {\\n  background-color: #3880ff;\\n  border-radius: 14px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXHNpZ251cC1jdXN0b21lci5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFLUSxVQUFVO0VBRVYscUJBQWdCO0FBSnhCOztBQUhBO0VBWUkscUJBQWdCO0VBQ2hCLGdDQUFhO0VBQ2IsaUJBQWlCO0FBTHJCOztBQVFFO0VBQ0UsYUFBYTtBQUxqQjs7QUFPRTtFQUNFLHlCQUF5QjtFQUN6QixtQkFBbUI7QUFKdkIiLCJmaWxlIjoic2lnbnVwLWN1c3RvbWVyLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImlvbi1jb250ZW50IHtcclxuICAgIC8vLS1iYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoOTBkZWcsIHJnYmEoNDMsOTAsMTQ4LDEpIDAlLCByZ2JhKDQ1LDExMiwyMjksMSkgMzUlLCByZ2JhKDQ1LDExMiwyMjksMSkgMTAwJSk7XHJcbiAgIFxyXG4gICAgICBpb24taXRlbSB7XHJcbiAgICAgIC8vIC0tYmFja2dyb3VuZDogcmdiKDEyMCwgMTI2LCAxMzQpO1xyXG4gICAgICAgIHBhZGRpbmc6IDA7XHJcbiAgICAgICAvLyBtYXJnaW46IDE0cHggMDtcclxuICAgICAgICAtLWJvcmRlci1yYWRpdXM6IDE0cHg7XHJcbiAgICAgICAvLyBjb2xvcjogI0ZGRkZGRjtcclxuICAgICAgICAvL2ZvbnQtd2VpZ2h0OiA2MDA7XHJcbiAgIH1cclxuICAgaW9uLXNlYXJjaGJhcntcclxuICAgIC0tYm9yZGVyLXJhZGl1czogMTRweDtcclxuICAgIC0tYmFja2dyb3VuZDogcmdiKDI0MywgMjQzLCAyNDMpO1xyXG4gICAgbWFyZ2luLXRvcDogLTEzcHg7XHJcbiAgIH1cclxuICB9XHJcbiAgaW9uLWNvbnRlbnQgaW9uLXNlZ21lbnQge1xyXG4gICAgbWFyZ2luOiA1cHggMDtcclxuICB9XHJcbiAgaW9uLWhlYWRlcntcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICMzODgwZmY7XHJcbiAgICBib3JkZXItcmFkaXVzOiAxNHB4O1xyXG4gIH0iXX0= */\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\nimport { SignupCustomerPageRoutingModule } from './signup-customer-routing.module';\nimport { SignupCustomerPage } from './signup-customer.page';\nimport { NgxIntlTelInputModule } from 'ngx-intl-tel-input';\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    SignupCustomerPageRoutingModule,\n    ReactiveFormsModule,\n    NgxIntlTelInputModule\n  ],\n  declarations: [SignupCustomerPage]\n})\nexport class SignupCustomerPageModule {}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\n@Injectable({\n  providedIn: 'root'\n})\nexport class SharedService {\n  currentAddress = new BehaviorSubject<any>({});\n  restaurant = new BehaviorSubject<any>({});\n  status = new BehaviorSubject<any>({});\n  location = new BehaviorSubject<any>({});\n  orderId = new BehaviorSubject<any> ({});\n  RestaurantLocation = new BehaviorSubject<any>({});\n  resId = new BehaviorSubject<any>({});\n  listOfCatagoryFilter = new BehaviorSubject<any>({});\n  deriverId = new BehaviorSubject<any>({});\n  customerId = new BehaviorSubject<any>({});\n  driverName = new BehaviorSubject<any>({});\n\n  getCurrentAddress(){\n    return this.currentAddress;\n  }\n  getMenuFilter(){\n    return this.listOfCatagoryFilter;\n  }\n  getLocation(){\n    return this.location;\n  }\n  getStatus(){\n    return this.status;\n  }\n  getRestaurantLocation(){\n    return this.RestaurantLocation;\n  }\n  getRestaurantId(){\n    return this.resId;\n  }\n  getDriverId(){\n    return this.deriverId;\n  }\n  getCustomerId(){\n    return this.customerId;\n  }\n  getDriverName(){\n    return this.driverName;\n  }\n  constructor() { }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AlertController } from '@ionic/angular';\nimport { Account } from 'src/Table/table';\nimport { AccountService } from '../Service/account.service';\nimport { SearchCountryField, CountryISO, PhoneNumberFormat } from 'ngx-intl-tel-input';\nimport { SharedService } from '../Service/shared.service';\nimport { Geolocation } from '@ionic-native/geolocation/ngx';\n@Component({\n  selector: 'app-signup-customer',\n  templateUrl: './signup-customer.page.html',\n  styleUrls: ['./signup-customer.page.scss'],\n})\nexport class SignupCustomerPage implements OnInit {\n  regform = this.fb.group({});\n  accountId: any;\n  fieldTextType: boolean;\n  conformPassword:boolean;\n  phoneNumber:number;\n  separateDialCode = false;\n\tSearchCountryField = SearchCountryField;\n\tCountryISO = CountryISO;\n  PhoneNumberFormat = PhoneNumberFormat;\n\tpreferredCountries: CountryISO[] = [CountryISO.UnitedStates, CountryISO.UnitedKingdom];\n  latitude: any = 0; //latitude\n  longitude: any = 0; //longitude\n  Address: { lat: any; lon: any; };\n  constructor(private fb: FormBuilder,\n    private accountService: AccountService,\n    private alertController: AlertController,\n    private router: Router,\n    private geolocation:Geolocation,\n    private sharedService:SharedService) { }\n\n  ngOnInit() {\n   let currentAddress = this.sharedService.getCurrentAddress().value;\n    console.log(currentAddress);\n    this.regform = this.fb.group({\n      FullName: [\"\", Validators.required],\n      email: [\"\", Validators.required],\n      phonenumber: [\"\", Validators.required],\n      locationId: [''],\n      password: [\"\", Validators.required],\n      confirmPassword: [\"\", Validators.required],\n      type:[\"\"],\n      active:[\"\"],\n    })\n    this.getCurrentCoordinates();\n  }\n  getCurrentCoordinates() {\n    this.geolocation.getCurrentPosition().then((resp) => {\n      this.latitude = resp.coords.latitude;\n      this.longitude = resp.coords.longitude;\n      this.Address ={\n        lat:this.latitude,\n        lon:this.longitude\n      }\n      this.sharedService.currentAddress.next(this.Address);\n     // this.getAddress(this.latitude,this.longitude);\n      console.log(resp.coords);\n     }).catch((error) => {\n       console.log('Error getting location', error);\n     });\n  }\n  registerAccount() {\n    if (this.regform.get(\"password\").value === this.regform.get(\"confirmPassword\").value) {\n      if (this.regform.valid) {\n        this.regform.get(\"locationId\").setValue(this.Address);\n          this.regform.get(\"active\").setValue(\"true\");\n          this.regform.get(\"type\").setValue(\"customer\");\n          this.regform.get(\"phonenumber\").setValue((this.regform.get(\"phonenumber\").value).internationalNumber)\n          this.accountService.create(this.regform.value).subscribe(res=>{\n           // alert(res.toString());\n          });\n          this.router.navigate([\"/menu/login\"]);\n        }\n        \n    else {\n        this.ErrorAlert(\"Please Enter All field.\");\n      }\n    }\n    else{\n      this.ErrorAlert(\"Password donot match\");\n    }\n  }\n  login() {\n    this.router.navigate([\"/menu/login\"]);\n  }\n  async presentAlertConfirm(account: Account) {\n    const alert = await this.alertController.create({\n      header: 'Confirm!',\n      message: '<strong>Are you sure you want delete?</strong>',\n      buttons: [\n        {\n          text: 'Cancel',\n          role: 'cancel',\n          cssClass: 'secondary',\n          handler: (blah) => {\n            console.log('Confirm Cancel: blah');\n          }\n        }, {\n          text: 'OK',\n          handler: () => {\n            this.accountService.removeAccount(account.id);\n            this.regform.reset();\n            this.accountId = null;\n          }\n        }\n      ]\n    });\n\n    await alert.present();\n  }\n  async ErrorAlert(message) {\n    const alert = await this.alertController.create({\n      cssClass: 'my-custom-class',\n      header: 'Error',\n      // subHeader: 'Subtitle',\n      message: message,\n      buttons: ['OK']\n    });\n\n    await alert.present();\n  }\n  toggleFieldTextType() {\n    this.fieldTextType = !this.fieldTextType;\n  }\n  conPassword(){\n    this.conformPassword = !this.conformPassword;\n  }\n}\n"],"sourceRoot":"webpack:///"}