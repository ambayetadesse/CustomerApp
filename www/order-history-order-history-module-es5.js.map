{"version":3,"sources":["webpack:///src/app/Service/restaurant.service.ts","webpack:///src/app/Service/order-detail.service.ts","webpack:///src/app/Service/food.service.ts","webpack:///src/app/order-history/order-history.page.ts","webpack:///src/app/order-history/order-history.page.scss","webpack:///src/app/order-history/order-history-routing.module.ts","webpack:///src/app/Service/order.service.ts","webpack:///src/app/Service/shared.service.ts","webpack:///src/app/order-history/order-history.page.html","webpack:///src/app/order-history/order-history.module.ts"],"names":["RestaurantService","http","APIURL","apiURL","val","post","restaurant","get","put","id","toPromise","error","status","json","providedIn","OrderDetailService","FoodService","OrderHistoryPage","modalCtrl","alertCtrl","orderService","fb","router","restaurantService","orderDetailService","foodService","sharedService","cart","regform","group","currentDate","Date","toUTCString","minDate","toISOString","maxDate","transactionType","DeliveryDate","DeliveryTime","DeliveryAddress","date","setDate","getDate","getOrders","getStatus","value","console","log","cartItemCount","getOrderItemCount","getRestaurantId","getRestaurant","getFood","readNOId","getAllRestaurant","subscribe","res","listOfRestaurant","getAllFood","listOfFood","No","getAllOrder","result","length","orderNo","product","decreaseProduct","addProduct","presentAlertConfirm","reduce","i","j","amount","Price","dismiss","Total","forEach","element","restaurantId","orderDetails","OrderId","Restaurant","Food","Qty","create","order","DateTime","Customer","localStorage","getItem","Location","find","c","location","OrderStatus","Driver","Vehicle","orderLocation","header","message","buttons","text","role","cssClass","handler","blah","removeProduct","alert","present","navigate","selector","template","routes","path","component","OrderHistoryPageRoutingModule","imports","forChild","exports","OrderService","RestaurantId","orderStatus","orderItemCount","driverId","items","el","index","indexOf","orderDetailsId","splice","next","data","CookingTime","Description","Name","categoryId","picture","type","push","added","p","entries","SharedService","currentAddress","orderId","RestaurantLocation","resId","listOfCatagoryFilter","deriverId","customerId","driverName","OrderHistoryPageModule","declarations"],"mappings":"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","file":"order-history-order-history-module-es5.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { BadInput } from '../common/bad-input';\nimport { NotFoundError } from '../common/not-found-error';\nimport { AppError } from '../common/app-error';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\n@Injectable({\n  providedIn: 'root'\n})\nexport class RestaurantService {\n  readonly APIURL = environment.apiURL;\n  constructor( private http: HttpClient) {\n  }\n  create(val: any) {\n    return this.http.post(this.APIURL + '/Restaurant', val);\n  }\n  getAllRestaurant(): Observable<any[]> {\n    var restaurant = this.http.get<any>(this.APIURL + '/Restaurant')\n    return restaurant ;\n  }\n  updateRestaurant(val: any) {\n    return this.http.put(this.APIURL + '/Restaurant/', val);\n  }\n  removeRestaurant(id) {\n    return this.http.delete(this.APIURL + '/Restaurant/' + id).toPromise();\n  }\n\n  private handleError(error: Response) {\n    if (error.status === 400) {\n      return Observable.throw(new BadInput(error.json()));\n    }\n\n    if (error.status === 404) {\n      return Observable.throw(new NotFoundError());\n    }\n\n    return Observable.throw(new AppError(error));\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { AngularFirestoreCollection, AngularFirestore } from 'angularfire2/firestore';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/internal/operators/map';\nimport { environment } from 'src/environments/environment';\nimport { OrderDetail } from 'src/Table/table';\nimport { AppError } from '../common/app-error';\nimport { BadInput } from '../common/bad-input';\nimport { NotFoundError } from '../common/not-found-error';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OrderDetailService {\n\n  readonly APIURL = environment.apiURL;\n  constructor( private http: HttpClient) {\n  }\n  create(val: any) {\n    return this.http.post(this.APIURL + '/OrderDetail', val);\n  }\n  getAllOrderDetail(): Observable<any[]> {\n    return this.http.get<any>(this.APIURL + '/OrderDetail');\n  }\n  updateOrderDetail(val: any) {\n    return this.http.put(this.APIURL + '/OrderDetail/', val);\n  }\n  removeOrderDetail(id) {\n    return this.http.delete(this.APIURL + '/OrderDetail/' + id).toPromise();\n  }\n\n  private handleError(error: Response) {\n    if (error.status === 400) {\n      return Observable.throw(new BadInput(error.json()));\n    }\n    if (error.status === 404) {\n      return Observable.throw(new NotFoundError());\n    }\n    return Observable.throw(new AppError(error));\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { AppError } from '../common/app-error';\nimport { BadInput } from '../common/bad-input';\nimport { NotFoundError } from '../common/not-found-error';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FoodService {\n  readonly APIURL = environment.apiURL;\n  constructor( private http: HttpClient) {\n  }\n  create(val: any) {\n    return this.http.post(this.APIURL + '/Food', val);\n  }\n  getAllFood(): Observable<any[]> {\n    return this.http.get<any>(this.APIURL + '/Food');\n  }\n  updateFood(val: any) {\n    return this.http.put(this.APIURL + '/Food/', val);\n  }\n  removeFood(id) {\n    return this.http.delete(this.APIURL + '/Food/' + id).toPromise();\n  }\n  private handleError(error: Response) {\n    if (error.status === 400) {\n      return Observable.throw(new BadInput(error.json()));\n    }\n\n    if (error.status === 404) {\n      return Observable.throw(new NotFoundError());\n    }\n\n    return Observable.throw(new AppError(error));\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { ModalController, AlertController } from '@ionic/angular';\nimport { Restaurant, Food } from 'src/Table/table';\nimport { FoodService } from '../Service/food.service';\nimport { OrderDetailService } from '../Service/order-detail.service';\nimport { OrderService } from '../Service/order.service';\nimport { RestaurantService } from '../Service/restaurant.service';\nimport { BehaviorSubject } from 'rxjs';\nimport { SharedService } from '../Service/shared.service';\n@Component({\n  selector: 'app-order-history',\n  templateUrl: './order-history.page.html',\n  styleUrls: ['./order-history.page.scss'],\n})\nexport class OrderHistoryPage implements OnInit {\n\n  cart: any[] = [];\n  cartItemCount: BehaviorSubject<number>;\n  id: any;\n  regform = this.fb.group({});\n  currentDate = new Date().toUTCString();\n  minDate = new Date().toISOString();\n  maxDate = new Date().toISOString();\n  listOfRestaurant: Restaurant[];\n  orderId: any;\n  x: number;\n  listOfFood: Food[];\n  orderNo: number;\n  restaurantId: any;\n  Total: number;\n  status: any;\n  constructor(private modalCtrl: ModalController,\n    private alertCtrl: AlertController,\n    private orderService: OrderService,\n    private fb: FormBuilder,\n    private router:Router,\n    private restaurantService:RestaurantService,\n    private orderDetailService:OrderDetailService,\n    private foodService:FoodService,\n    private sharedService:SharedService) { }\n\n  ngOnInit() {\n    this.regform = this.fb.group({\n      transactionType: [\"\"],\n      DeliveryDate: [\"\"],\n      DeliveryTime: [\"\"],\n      DeliveryAddress: [\"\"]\n    })\n    //setting min date\n    let date: Date = new Date();\n    date.setDate(date.getDate() - 5);\n    this.minDate = date.toISOString();\n    //setting max date\n    date = new Date();\n    date.setDate(date.getDate() + 5);\n    this.maxDate = date.toISOString();\n    ///to get data form service\n    this.cart = this.orderService.getOrders();\n    this.status = this.sharedService.getStatus().value;\n    console.log(this.status);\n    this.cartItemCount = this.orderService.getOrderItemCount();\n    this.id = this.orderService.getRestaurantId().value;\n    //console.log(this.id)\n    this.getRestaurant();\n    this.getFood();\n    this.readNOId();\n  }\n  getRestaurant(){\n    this.restaurantService.getAllRestaurant().subscribe(res=>{\n      this.listOfRestaurant = res;\n    })\n  }\n  getFood(){\n    this.foodService.getAllFood().subscribe(res=>{\n      this.listOfFood = res;\n    })\n  }\n  readNOId() {\n    let No = 0;\n    this.orderService.getAllOrder().subscribe((result) => {\n      if (result.length == 0) No = 1;\n      else No = result.length + 1;\n      this.orderNo =  + No;\n    });\n  }\n  decreaseCartItem(product) {\n    this.orderService.decreaseProduct(product);\n  }\n\n  increaseCartItem(product) {\n    this.orderService.addProduct(product);\n  }\n\n  removeCartItem(product) {\n    //this.orderService.removeProduct(product);\n    this.presentAlertConfirm(product);\n  }\n\n  getTotal() {\n    return this.cart.reduce((i, j) => i + j.amount * j.Price, 0);\n  }\n\n  close() {\n    this.modalCtrl.dismiss();\n  }\n\n  order(cart) {\n    this.Total = 0;\n    cart.forEach(element => {\n      this.restaurantId =element.restaurantId\n      this.Total = this.Total+(element.Price*element.amount)\n      let orderDetails = {\n          OrderId:this.orderNo,\n          Restaurant: element.restaurantId,\n          Food:element.id,\n          Qty: element.amount,\n          Price:element.Price\n         }\n         this.orderDetailService.create(orderDetails);\n       });\n     let order = {\n      DateTime: this.regform.get('DeliveryDate').value,\n      Customer: localStorage.getItem(\"userId\"),\n      Location:this.listOfRestaurant.find(c=>c.id==this.restaurantId).location,\n      OrderStatus: this.regform.get('transactionType').value,\n      Total: this.Total,\n      orderNo:this.orderNo,\n      Driver: null,\n      Vehicle: null, \n      orderLocation:null //or droupLocation\n     }\n     this.orderService.create(order);\n  }\n  async presentAlertConfirm(product) {\n    const alert = await this.alertCtrl.create({\n      header: 'Clear cart !',\n      message: '<strong>Are you sure you want to remove all items in your cart ?</strong>',\n      buttons: [\n        {\n          text: 'Cancel',\n          role: 'cancel',\n          cssClass: 'secondary',\n          handler: (blah) => {\n            console.log('Confirm Cancel: blah');\n          }\n        }, {\n          text: 'OK',\n          handler: () => {\n            this.orderService.removeProduct(product);\n           }\n        }\n      ]\n    });\n    await alert.present();\n  }\nbackPage(){\n  if(this.status==\"driver\"){\n    this.router.navigate([\"/menu/driver-home\"]); \n  }\n  else if(this.status ==\"restaurant-home\"){\n    this.router.navigate([\"/menu/restaurant-home\"]); \n  }\n  else if(this.status ==\"restaurant-history\"){\n    this.router.navigate([\"/menu/restaurant-history\"]);\n  }\n  else{\n    this.router.navigate([\"/menu/order\"]);\n  }\n  \n}\n}\n","export default \"ion-badge {\\n  color: #fff;\\n  position: absolute;\\n  top: -9px;\\n  right: 2px;\\n  border-radius: 100%;\\n}\\n\\n.cart-icon {\\n  font-size: 50px;\\n}\\n\\n.cart-length {\\n  color: var(--ion-color-primary);\\n  position: absolute;\\n  top: 18px;\\n  left: 25px;\\n  font-weight: 600;\\n  font-size: 1em;\\n  min-width: 25px;\\n  z-index: 10;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXG9yZGVyLWhpc3RvcnkucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksV0FBVztFQUNYLGtCQUFrQjtFQUNsQixTQUFTO0VBQ1QsVUFBVTtFQUNWLG1CQUFtQjtBQUN2Qjs7QUFFQTtFQUNFLGVBQWU7QUFDakI7O0FBRUE7RUFDRSwrQkFBK0I7RUFDL0Isa0JBQWtCO0VBQ2xCLFNBQVM7RUFDVCxVQUFVO0VBQ1YsZ0JBQWdCO0VBQ2hCLGNBQWM7RUFDZCxlQUFlO0VBQ2YsV0FBVztBQUNiIiwiZmlsZSI6Im9yZGVyLWhpc3RvcnkucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiaW9uLWJhZGdlIHtcclxuICAgIGNvbG9yOiAjZmZmO1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgdG9wOiAtOXB4O1xyXG4gICAgcmlnaHQ6IDJweDtcclxuICAgIGJvcmRlci1yYWRpdXM6IDEwMCU7XHJcbn1cclxuIFxyXG4uY2FydC1pY29uIHtcclxuICBmb250LXNpemU6IDUwcHg7XHJcbn1cclxuIFxyXG4uY2FydC1sZW5ndGgge1xyXG4gIGNvbG9yOiB2YXIoLS1pb24tY29sb3ItcHJpbWFyeSk7XHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIHRvcDogMThweDtcclxuICBsZWZ0OiAyNXB4O1xyXG4gIGZvbnQtd2VpZ2h0OiA2MDA7XHJcbiAgZm9udC1zaXplOiAxZW07XHJcbiAgbWluLXdpZHRoOiAyNXB4O1xyXG4gIHotaW5kZXg6IDEwO1xyXG59XHJcbiJdfQ== */\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { OrderHistoryPage } from './order-history.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: OrderHistoryPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class OrderHistoryPageRoutingModule {}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { AppError } from '../common/app-error';\nimport { BadInput } from '../common/bad-input';\nimport { NotFoundError } from '../common/not-found-error';\nimport { SharedService } from './shared.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OrderService {\n  constructor( private http: HttpClient,\n               private sharedService: SharedService) {\n  }\n  readonly APIURL = environment.apiURL;\n  private cart = [];\n  private cartItemCount = new BehaviorSubject(0);\n  RestaurantId = new BehaviorSubject<any>({});\n  orderStatus = new BehaviorSubject<any>({});\n\n  amount: number;\n  private order = [];\n  private orderItemCount  = new BehaviorSubject(0);\n  create(val: any) {\n    return this.http.post(this.APIURL + '/Order', val);\n  }\n  getAllOrder(): Observable<any[]> {\n    return this.http.get<any>(this.APIURL + '/Order');\n  }\n  updateOrder(val: any) {\n    return this.http.put(this.APIURL + '/Order/', val);\n  }\n  removeOrder(id) {\n    return this.http.delete(this.APIURL + '/Order/' + id).toPromise();\n  }\n\n  // create(orderObj) {\n  //   let values = this.orderCollectionList.add(orderObj)\n  //     .then((docRef) => {\n  //       this.sharedService.orderId.next(docRef.id);\n  //     })\n  //   return values;\n  // }\n\n  getOrderBy(id){\n    return this.http.get<any>(this.APIURL + '/Order' + id);\n  }\n  getOrderByDriverId(driverId){\n    return this.http.get<any>(this.APIURL + '/Order' + driverId);\n  }\n  getCart() {\n    return this.cart;\n  }\n  getOrders(){\n    return this.order;\n  }\n  getCartItemCount() {\n    return this.cartItemCount;\n  }\n  getOrderItemCount(){\n    return this.orderItemCount;\n  }\n  getRestaurantId() {\n    return this.RestaurantId;\n  }\n  getOrderStatus() {\n    return this.orderStatus;\n  }\n  addOrder(items) {\n   this.order = [];\n   this.amount = 0;\n   this.order.forEach(el => {\n      const index = this.order.indexOf(c => c.orderDetailsId === el.orderDetailsId);\n      this.order.splice(index, 1);\n    });\n   this.orderItemCount.next(0);\n   items.forEach(element => {\n    this.amount = this.amount + element.amount;\n    const data = {\n        CookingTime: element.CookingTime,\n        DeliveryTime: element.DeliveryTime,\n        Description: element.Description,\n        Name: element.Name,\n        Price: element.Price,\n        amount: element.amount,\n        categoryId: element.categoryId,\n        id: element.Food,\n        picture: element.picture,\n        restaurantId: element.restaurantId,\n        type: element.type,\n        orderDetailsId: element.orderDetailsId,\n      };\n    this.order.push(data);\n      });\n   this.orderItemCount.next(this.orderItemCount.value + this.amount);\n  }\n  addProduct(product) {\n    let added = false;\n    for (const p of this.cart) {\n      if (p.id === product.id) {\n        p.amount += 1;\n        added = true;\n        break;\n      }\n    }\n    if (!added) {\n      product.amount = 1;\n      this.cart.push(product);\n    }\n    this.cartItemCount.next(this.cartItemCount.value + 1);\n  }\n\n  decreaseProduct(product) {\n    for (const [index, p] of this.cart.entries()) {\n      if (p.id === product.id) {\n        p.amount -= 1;\n        if (p.amount === 0) {\n          this.cart.splice(index, 1);\n        }\n      }\n    }\n    this.cartItemCount.next(this.cartItemCount.value - 1);\n  }\n\n  removeProduct(product) {\n    for (const [index, p] of this.cart.entries()) {\n      if (p.id === product.id) {\n        this.cartItemCount.next(this.cartItemCount.value - p.amount);\n        this.cart.splice(index, 1);\n      }\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\n@Injectable({\n  providedIn: 'root'\n})\nexport class SharedService {\n  currentAddress = new BehaviorSubject<any>({});\n  restaurant = new BehaviorSubject<any>({});\n  status = new BehaviorSubject<any>({});\n  location = new BehaviorSubject<any>({});\n  orderId = new BehaviorSubject<any> ({});\n  RestaurantLocation = new BehaviorSubject<any>({});\n  resId = new BehaviorSubject<any>({});\n  listOfCatagoryFilter = new BehaviorSubject<any>({});\n  deriverId = new BehaviorSubject<any>({});\n  customerId = new BehaviorSubject<any>({});\n  driverName = new BehaviorSubject<any>({});\n\n  getCurrentAddress(){\n    return this.currentAddress;\n  }\n  getMenuFilter(){\n    return this.listOfCatagoryFilter;\n  }\n  getLocation(){\n    return this.location;\n  }\n  getStatus(){\n    return this.status;\n  }\n  getRestaurantLocation(){\n    return this.RestaurantLocation;\n  }\n  getRestaurantId(){\n    return this.resId;\n  }\n  getDriverId(){\n    return this.deriverId;\n  }\n  getCustomerId(){\n    return this.customerId;\n  }\n  getDriverName(){\n    return this.driverName;\n  }\n  constructor() { }\n}\n","export default \"<ion-header>\\n  <ion-toolbar color=\\\"light\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-button fill=\\\"solid\\\" shape=\\\"round\\\" color=\\\"light\\\" (click)=\\\"backPage()\\\">\\n        <ion-icon slot=\\\"icon-only\\\" name=\\\"arrow-back\\\" color=\\\"primary\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n    <ion-title style=\\\"text-align: center;\\\">Detail orders</ion-title>\\n    <ion-buttons slot=\\\"end\\\">\\n      <!-- <ion-button fill=\\\"solid\\\" shape=\\\"round\\\" color=\\\"light\\\">\\n        <ion-icon slot=\\\"icon-only\\\" name=\\\"share-outline\\\" color=\\\"primary\\\"></ion-icon>\\n      </ion-button>\\n      <ion-button fill=\\\"solid\\\" shape=\\\"round\\\" color=\\\"light\\\">\\n        <ion-icon slot=\\\"icon-only\\\" name=\\\"search-outline\\\" color=\\\"primary\\\"></ion-icon>\\n      </ion-button> -->\\n      <ion-button  >\\n        <ion-badge *ngIf=\\\"cart.length > 0\\\">{{ cartItemCount | async }}</ion-badge>\\n        <ion-icon slot=\\\"icon-only\\\" class=\\\"cart-icon\\\" name=\\\"cart\\\"></ion-icon>\\n      </ion-button> \\n    </ion-buttons>\\n   </ion-toolbar>\\n</ion-header>\\n\\n<ion-content fullscreen>\\n  <!-- <div class=\\\"ion-text-end\\\">\\n    <ion-button (click)=\\\"close()\\\" fill=\\\"clear\\\" color=\\\"dark\\\">\\n      <ion-icon name=\\\"close\\\" slot=\\\"start\\\"></ion-icon>\\n    </ion-button>\\n  </div> -->\\n  <div class=\\\"ion-padding\\\">\\n    <ion-list>\\n      <ion-item *ngFor=\\\"let p of cart\\\" class=\\\"ion-text-wrap\\\">\\n        <ion-grid>\\n          <ion-row class=\\\"ion-align-items-center\\\">\\n            <ion-col size=\\\"2\\\" class=\\\"ion-align-self-center\\\">\\n              <ion-button color=\\\"medium\\\" fill=\\\"clear\\\" >\\n                <ion-icon name=\\\"remove-circle\\\" slot=\\\"icon-only\\\"></ion-icon>\\n              </ion-button>\\n            </ion-col>\\n            <ion-col size=\\\"1\\\" class=\\\"ion-align-self-center\\\">\\n              {{ p.amount }}\\n            </ion-col>\\n            <ion-col size=\\\"2\\\" class=\\\"ion-align-self-center\\\">\\n              <ion-button color=\\\"medium\\\" fill=\\\"clear\\\" >\\n                <ion-icon name=\\\"add-circle\\\" slot=\\\"icon-only\\\"></ion-icon>\\n              </ion-button>\\n            </ion-col>\\n            <ion-col size=\\\"2\\\" offset=\\\"5\\\">\\n              <ion-button color=\\\"medium\\\" fill=\\\"clear\\\" >\\n                <ion-icon name=\\\"close-circle\\\" slot=\\\"icon-only\\\"></ion-icon>\\n              </ion-button>\\n            </ion-col>\\n          </ion-row>\\n          <ion-row>\\n            <ion-col size=\\\"5\\\">\\n              <b>{{ p.Name }}</b>\\n            </ion-col>\\n            <ion-col size=\\\"4\\\">\\n              <b>{{ p.Price | currency:'ETB'}}</b>\\n            </ion-col>\\n            <ion-col size=\\\"3\\\" class=\\\"ion-text-end\\\">\\n              {{ p.amount * p.Price | currency:'ETB' }}\\n            </ion-col>\\n          </ion-row>\\n        </ion-grid>\\n      </ion-item>\\n      <ion-item>\\n        <ion-grid>\\n          <ion-row>\\n            <ion-col size=\\\"9\\\">\\n              Total:\\n            </ion-col>\\n            <ion-col size=\\\"3\\\" class=\\\"ion-text-end\\\">\\n              {{ getTotal() | currency:'ETB' }}\\n            </ion-col>\\n          </ion-row>\\n        </ion-grid>\\n      </ion-item>\\n    </ion-list>\\n   \\n  </div>\\n</ion-content>\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { OrderHistoryPageRoutingModule } from './order-history-routing.module';\n\nimport { OrderHistoryPage } from './order-history.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    OrderHistoryPageRoutingModule,\n    ReactiveFormsModule\n  ],\n  declarations: [OrderHistoryPage]\n})\nexport class OrderHistoryPageModule {}\n"]}