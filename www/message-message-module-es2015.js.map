{"version":3,"sources":["./src/app/message/message.module.ts","./src/app/message/message.page.ts","./node_modules/ngx-autosize/__ivy_ngcc__/fesm2015/ngx-autosize.js","./src/app/message/message-routing.module.ts","./src/app/message/message.page.html","./src/app/Service/message.service.ts","./src/app/Service/shared.service.ts","./src/app/message/message.page.scss"],"names":[],"mappings":"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AAC1F,cAAc,wDAAU;AACxB;AACA;AACA,aAAa;AACb,KAAK,eAAe,EAAE;;AAEtB;AACA;AACA,cAAc,wGAAwG;AACtH;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,0DAAY;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;A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","file":"message-message-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { MessagePageRoutingModule } from './message-routing.module';\n\nimport { MessagePage } from './message.page';\nimport { AutosizeModule } from 'ngx-autosize';\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    MessagePageRoutingModule,\n    ReactiveFormsModule,\n    AutosizeModule\n  ],\n  declarations: [MessagePage]\n})\nexport class MessagePageModule {}\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { IonContent } from '@ionic/angular';\nimport { MessageService } from '../Service/message.service';\nimport { SharedService } from '../Service/shared.service';\n\n@Component({\n  selector: 'app-message',\n  templateUrl: './message.page.html',\n  styleUrls: ['./message.page.scss'],\n})\nexport class MessagePage implements OnInit {\n  driverId: any;\n  customerId: any;\n  listOfMessage: any[];\n  newMsg: any;\n  @ViewChild(IonContent) content:IonContent  \n  currentUser: any;\n  customerName: any;\n    constructor(private sharedService:SharedService,\n      private messageService:MessageService){}\n   ngOnInit(){\n    this.customerName = this.sharedService.getDriverName().value;\n    // console.log(this.customerName);\n    this.driverId = this.sharedService.getDriverId().value;\n    this.customerId = this.sharedService.getCustomerId().value;\n    this.currentUser =this.customerId;\n    this.getMessage();\n   }\n  getMessage(){\n    this.messageService.getAllMessage().subscribe(res=>{\n      let messages = res.filter(c=>c.userId==localStorage.getItem('userId') && c.driverId==this.driverId);\n      this.listOfMessage = messages.sort((a,b)=> new Date(a.date).getTime() - new Date(b.date).getTime());\n      this.currentUser  = localStorage.getItem(\"userId\");\n    })\n  }\n sendMessage(){\n   let data ={\n    msgcontent:this.newMsg,\n    date:new Date(),\n    userId:this.customerId,\n    driverId:this.driverId,\n    sessionId: localStorage.getItem(\"userId\")\n   }\n   this.listOfMessage.push(data);\n   this.listOfMessage.sort((a, b) => new Date(a.date).getTime() - new Date(b.date).getTime());\n  this.messageService.create(data).subscribe(res=>{\n    alert(res.toString());\n  });\n  this.newMsg = '';\n  setTimeout(() => {\n    this.content.scrollToBottom(200);\n  });\n }\n\n}\n","import { Injectable, ɵɵdefineInjectable, EventEmitter, Directive, ElementRef, NgZone, Input, Output, HostListener, NgModule } from '@angular/core';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nimport * as ɵngcc0 from '@angular/core';\nclass WindowRef {\n    /**\n     * @return {?}\n     */\n    get nativeWindow() {\n        return window;\n    }\n}\nWindowRef.ɵfac = function WindowRef_Factory(t) { return new (t || WindowRef)(); };\nWindowRef.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: WindowRef, factory: WindowRef.ɵfac, providedIn: 'root' });\n/** @nocollapse */ WindowRef.ngInjectableDef = ɵɵdefineInjectable({ factory: function WindowRef_Factory() { return new WindowRef(); }, token: WindowRef, providedIn: \"root\" });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(WindowRef, [{\n        type: Injectable,\n        args: [{\n                providedIn: 'root'\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst MAX_LOOKUP_RETRIES = 3;\nclass AutosizeDirective {\n    /**\n     * @param {?} element\n     * @param {?} _window\n     * @param {?} _zone\n     */\n    constructor(element, _window, _zone) {\n        this.element = element;\n        this._window = _window;\n        this._zone = _zone;\n        this.onlyGrow = false;\n        this.useImportant = false;\n        this.resized = new EventEmitter();\n        this.retries = 0;\n        this._destroyed = false;\n        if (this.element.nativeElement.tagName !== 'TEXTAREA') {\n            this._findNestedTextArea();\n        }\n        else {\n            this.textAreaEl = this.element.nativeElement;\n            this.textAreaEl.style.overflow = 'hidden';\n            this._onTextAreaFound();\n        }\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set minRows(value) {\n        this._minRows = value;\n        if (this.textAreaEl) {\n            this.textAreaEl.rows = value;\n        }\n    }\n    ;\n    /**\n     * @param {?} textArea\n     * @return {?}\n     */\n    onInput(textArea) {\n        this.adjust();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._destroyed = true;\n        if (this._windowResizeHandler) {\n            this._window.nativeWindow.removeEventListener('resize', this._windowResizeHandler, false);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentChecked() {\n        this.adjust();\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        this.adjust(true);\n    }\n    /**\n     * @return {?}\n     */\n    _findNestedTextArea() {\n        this.textAreaEl = this.element.nativeElement.querySelector('TEXTAREA');\n        if (!this.textAreaEl && this.element.nativeElement.shadowRoot) {\n            this.textAreaEl = this.element.nativeElement.shadowRoot.querySelector('TEXTAREA');\n        }\n        if (!this.textAreaEl) {\n            if (this.retries >= MAX_LOOKUP_RETRIES) {\n                console.warn('ngx-autosize: textarea not found');\n            }\n            else {\n                this.retries++;\n                setTimeout((/**\n                 * @return {?}\n                 */\n                () => {\n                    this._findNestedTextArea();\n                }), 100);\n            }\n            return;\n        }\n        this.textAreaEl.style.overflow = 'hidden';\n        this._onTextAreaFound();\n    }\n    /**\n     * @return {?}\n     */\n    _onTextAreaFound() {\n        this._addWindowResizeHandler();\n        setTimeout((/**\n         * @return {?}\n         */\n        () => {\n            this.adjust();\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    _addWindowResizeHandler() {\n        this._windowResizeHandler = Debounce((/**\n         * @return {?}\n         */\n        () => {\n            this._zone.run((/**\n             * @return {?}\n             */\n            () => {\n                this.adjust();\n            }));\n        }), 200);\n        this._zone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            this._window.nativeWindow.addEventListener('resize', this._windowResizeHandler, false);\n        }));\n    }\n    /**\n     * @param {?=} inputsChanged\n     * @return {?}\n     */\n    adjust(inputsChanged = false) {\n        if (!this._destroyed && this.textAreaEl && this.textAreaEl.parentNode) {\n            /** @type {?} */\n            const currentText = this.textAreaEl.value;\n            if (inputsChanged === false &&\n                currentText === this._oldContent &&\n                this.textAreaEl.offsetWidth === this._oldWidth) {\n                return;\n            }\n            this._oldContent = currentText;\n            this._oldWidth = this.textAreaEl.offsetWidth;\n            /** @type {?} */\n            const clone = this.textAreaEl.cloneNode(true);\n            /** @type {?} */\n            const parent = this.textAreaEl.parentNode;\n            clone.style.width = this.textAreaEl.offsetWidth + 'px';\n            clone.style.visibility = 'hidden';\n            clone.style.position = 'absolute';\n            clone.textContent = currentText;\n            parent.appendChild(clone);\n            clone.style.overflow = 'hidden';\n            clone.style.height = 'auto';\n            /** @type {?} */\n            let height = clone.scrollHeight;\n            // add into height top and bottom borders' width\n            /** @type {?} */\n            let computedStyle = this._window.nativeWindow.getComputedStyle(clone, null);\n            height += parseInt(computedStyle.getPropertyValue('border-top-width'));\n            height += parseInt(computedStyle.getPropertyValue('border-bottom-width'));\n            // add into height top and bottom paddings width\n            height += parseInt(computedStyle.getPropertyValue('padding-top'));\n            height += parseInt(computedStyle.getPropertyValue('padding-bottom'));\n            /** @type {?} */\n            const oldHeight = this.textAreaEl.offsetHeight;\n            /** @type {?} */\n            const willGrow = height > oldHeight;\n            if (this.onlyGrow === false || willGrow) {\n                /** @type {?} */\n                const lineHeight = this._getLineHeight();\n                /** @type {?} */\n                const rowsCount = height / lineHeight;\n                if (this._minRows && this._minRows >= rowsCount) {\n                    height = this._minRows * lineHeight;\n                }\n                else if (this.maxRows && this.maxRows <= rowsCount) {\n                    // never shrink the textarea if onlyGrow is true\n                    /** @type {?} */\n                    const maxHeight = this.maxRows * lineHeight;\n                    height = this.onlyGrow ? Math.max(maxHeight, oldHeight) : maxHeight;\n                    this.textAreaEl.style.overflow = 'auto';\n                }\n                else {\n                    this.textAreaEl.style.overflow = 'hidden';\n                }\n                /** @type {?} */\n                const heightStyle = height + 'px';\n                /** @type {?} */\n                const important = this.useImportant ? 'important' : '';\n                this.textAreaEl.style.setProperty('height', heightStyle, important);\n                this.resized.emit(height);\n            }\n            parent.removeChild(clone);\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _getLineHeight() {\n        /** @type {?} */\n        let lineHeight = parseInt(this.textAreaEl.style.lineHeight, 10);\n        if (isNaN(lineHeight) && this._window.nativeWindow.getComputedStyle) {\n            /** @type {?} */\n            const styles = this._window.nativeWindow.getComputedStyle(this.textAreaEl);\n            lineHeight = parseInt(styles.lineHeight, 10);\n        }\n        if (isNaN(lineHeight)) {\n            /** @type {?} */\n            const fontSize = this._window.nativeWindow.getComputedStyle(this.textAreaEl, null).getPropertyValue('font-size');\n            lineHeight = Math.floor(parseInt(fontSize.replace('px', ''), 10) * 1.5);\n        }\n        return lineHeight;\n    }\n}\nAutosizeDirective.ɵfac = function AutosizeDirective_Factory(t) { return new (t || AutosizeDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(WindowRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };\nAutosizeDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: AutosizeDirective, selectors: [[\"\", \"autosize\", \"\"]], hostBindings: function AutosizeDirective_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"input\", function AutosizeDirective_input_HostBindingHandler($event) { return ctx.onInput($event.target); });\n    } }, inputs: { onlyGrow: \"onlyGrow\", useImportant: \"useImportant\", minRows: \"minRows\", maxRows: \"maxRows\" }, outputs: { resized: \"resized\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature] });\n/** @nocollapse */\nAutosizeDirective.ctorParameters = () => [\n    { type: ElementRef },\n    { type: WindowRef },\n    { type: NgZone }\n];\nAutosizeDirective.propDecorators = {\n    minRows: [{ type: Input }],\n    maxRows: [{ type: Input }],\n    onlyGrow: [{ type: Input }],\n    useImportant: [{ type: Input }],\n    resized: [{ type: Output }],\n    onInput: [{ type: HostListener, args: ['input', ['$event.target'],] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AutosizeDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[autosize]'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: WindowRef }, { type: ɵngcc0.NgZone }]; }, { onlyGrow: [{\n            type: Input\n        }], useImportant: [{\n            type: Input\n        }], resized: [{\n            type: Output\n        }], minRows: [{\n            type: Input\n        }], \n    /**\n     * @param {?} textArea\n     * @return {?}\n     */\n    onInput: [{\n            type: HostListener,\n            args: ['input', ['$event.target']]\n        }], maxRows: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    AutosizeDirective.prototype._minRows;\n    /** @type {?} */\n    AutosizeDirective.prototype.maxRows;\n    /** @type {?} */\n    AutosizeDirective.prototype.onlyGrow;\n    /** @type {?} */\n    AutosizeDirective.prototype.useImportant;\n    /** @type {?} */\n    AutosizeDirective.prototype.resized;\n    /**\n     * @type {?}\n     * @private\n     */\n    AutosizeDirective.prototype.retries;\n    /**\n     * @type {?}\n     * @private\n     */\n    AutosizeDirective.prototype.textAreaEl;\n    /**\n     * @type {?}\n     * @private\n     */\n    AutosizeDirective.prototype._oldContent;\n    /**\n     * @type {?}\n     * @private\n     */\n    AutosizeDirective.prototype._oldWidth;\n    /**\n     * @type {?}\n     * @private\n     */\n    AutosizeDirective.prototype._windowResizeHandler;\n    /**\n     * @type {?}\n     * @private\n     */\n    AutosizeDirective.prototype._destroyed;\n    /** @type {?} */\n    AutosizeDirective.prototype.element;\n    /**\n     * @type {?}\n     * @private\n     */\n    AutosizeDirective.prototype._window;\n    /**\n     * @type {?}\n     * @private\n     */\n    AutosizeDirective.prototype._zone;\n    /* Skipping unhandled member: ;*/\n}\n/**\n * @param {?} func\n * @param {?} wait\n * @param {?=} immediate\n * @return {?}\n */\nfunction Debounce(func, wait, immediate = false) {\n    /** @type {?} */\n    let timeout;\n    return (/**\n     * @return {?}\n     */\n    function () {\n        /** @type {?} */\n        const context = this;\n        /** @type {?} */\n        const args = arguments;\n        /** @type {?} */\n        const later = (/**\n         * @return {?}\n         */\n        function () {\n            timeout = null;\n            if (!immediate) {\n                func.apply(context, args);\n            }\n        });\n        /** @type {?} */\n        const callNow = immediate && !timeout;\n        clearTimeout(timeout);\n        timeout = setTimeout(later, wait);\n        if (callNow) {\n            func.apply(context, args);\n        }\n    });\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass AutosizeModule {\n}\nAutosizeModule.ɵfac = function AutosizeModule_Factory(t) { return new (t || AutosizeModule)(); };\nAutosizeModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: AutosizeModule });\nAutosizeModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ providers: [\n        WindowRef\n    ], imports: [[]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(AutosizeModule, { declarations: [AutosizeDirective], exports: [AutosizeDirective] }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AutosizeModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [AutosizeDirective],\n                imports: [],\n                providers: [\n                    WindowRef\n                ],\n                exports: [AutosizeDirective]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { AutosizeDirective, AutosizeModule, WindowRef as ɵa };\n\n//# sourceMappingURL=ngx-autosize.js.map","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { MessagePage } from './message.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: MessagePage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class MessagePageRoutingModule {}\n","export default \"<ion-header>\\n  <ion-toolbar color=\\\"light\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button defaultHref=\\\"detail\\\"></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>{{this.customerName}}</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n<ion-grid>\\n  <ion-row *ngFor=\\\"let message of listOfMessage\\\">\\n   <ion-col size=\\\"9\\\"  *ngIf=\\\"currentUser !== message.sessionId\\\"  class=\\\"message other-message\\\">\\n     <b>{{message.user}}</b>\\n     <span>{{message.msgcontent}}</span>\\n     <div class=\\\"time\\\" text-right><br>\\n     {{message.date|date:'short'}}\\n     </div>\\n   </ion-col>\\n   <ion-col offset=\\\"3\\\" size=\\\"9\\\" *ngIf=\\\"currentUser === message.sessionId\\\" class=\\\"message my-message\\\">\\n    <b>{{message.user}}</b>\\n    <span>{{message.msgcontent}}</span>\\n    <div class=\\\"time\\\" text-right><br>\\n    {{message.date|date:'short'}}\\n    </div>\\n  </ion-col>\\n  </ion-row>\\n</ion-grid>\\n<ion-footer>\\n  <ion-toolbar >\\n   <ion-row align-items-center no-padding>\\n     <ion-col size=\\\"10\\\">\\n       <textarea autosize maxRows=\\\"4\\\" [(ngModel)]=\\\"newMsg\\\" class=\\\"message-input\\\"></textarea>\\n     </ion-col>\\n     <ion-col size=\\\"2\\\">\\n      <ion-button expand=\\\"block\\\" fill=\\\"clear\\\" color=\\\"primary\\\" [disabled]=\\\"newMsg===''\\\"\\n      class=\\\"msg-btn\\\" (click)=\\\"sendMessage()\\\">\\n      <ion-icon name=\\\"send-outline\\\"></ion-icon>\\n    </ion-button>\\n    </ion-col>\\n   </ion-row>\\n  </ion-toolbar>\\n</ion-footer>\\n</ion-content>\\n\";","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\n@Injectable({\n  providedIn: 'root'\n})\nexport class MessageService {\n  readonly APIURL = environment.apiURL;\n  constructor( private http: HttpClient) {\n  }\n  create(val: any) {\n    return this.http.post(this.APIURL + '/Message', val);\n  }\n  getAllMessage(): Observable<any[]> {\n    return this.http.get<any>(this.APIURL + '/Message');\n  }\n  updateMessage(val: any) {\n    return this.http.put(this.APIURL + '/Message/', val);\n  }\n  removeMessage(id) {\n    return this.http.delete(this.APIURL + '/Message/' + id).toPromise();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\n@Injectable({\n  providedIn: 'root'\n})\nexport class SharedService {\n  currentAddress = new BehaviorSubject<any>({});\n  restaurant = new BehaviorSubject<any>({});\n  status = new BehaviorSubject<any>({});\n  location = new BehaviorSubject<any>({});\n  orderId = new BehaviorSubject<any> ({});\n  RestaurantLocation = new BehaviorSubject<any>({});\n  resId = new BehaviorSubject<any>({});\n  listOfCatagoryFilter = new BehaviorSubject<any>({});\n  deriverId = new BehaviorSubject<any>({});\n  customerId = new BehaviorSubject<any>({});\n  driverName = new BehaviorSubject<any>({});\n\n  getCurrentAddress(){\n    return this.currentAddress;\n  }\n  getMenuFilter(){\n    return this.listOfCatagoryFilter;\n  }\n  getLocation(){\n    return this.location;\n  }\n  getStatus(){\n    return this.status;\n  }\n  getRestaurantLocation(){\n    return this.RestaurantLocation;\n  }\n  getRestaurantId(){\n    return this.resId;\n  }\n  getDriverId(){\n    return this.deriverId;\n  }\n  getCustomerId(){\n    return this.customerId;\n  }\n  getDriverName(){\n    return this.driverName;\n  }\n  constructor() { }\n}\n","export default \".message {\\n  padding: 10px;\\n  border-radius: 10px;\\n  margin-bottom: 4px;\\n  white-space: pre-wrap;\\n}\\n\\n.other-message {\\n  background: var(--ion-color-tertiary);\\n  color: #fff;\\n}\\n\\n.my-message {\\n  background: var(--ion-color-secondary);\\n  color: #fff;\\n}\\n\\n.time {\\n  color: #dfdfdf;\\n  float: right;\\n  font-size: small;\\n}\\n\\n.msg-btn {\\n  --padding-start:0.5em;\\n  --padding-end:0.5em;\\n  margin-top: 10px;\\n}\\n\\n.message-input {\\n  width: 100%;\\n  border: 1px solid var(--ion-color-medium);\\n  border-radius: 10px;\\n  background: #fff;\\n  resize: none;\\n  padding-left: 10px;\\n  padding-right: 10px;\\n}\\n\\nion-fab {\\n  width: 100%;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXG1lc3NhZ2UucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0MsYUFBWTtFQUNaLG1CQUFrQjtFQUNsQixrQkFBaUI7RUFDakIscUJBQXFCO0FBQ3RCOztBQUNBO0VBQ0kscUNBQXFDO0VBQ3JDLFdBQVc7QUFFZjs7QUFBQTtFQUNJLHNDQUFzQztFQUN0QyxXQUFVO0FBR2Q7O0FBREE7RUFDSSxjQUFjO0VBQ2QsWUFBWTtFQUNaLGdCQUFnQjtBQUlwQjs7QUFGQTtFQUNFLHFCQUFnQjtFQUNoQixtQkFBYztFQUNkLGdCQUFnQjtBQUtsQjs7QUFIQTtFQUNJLFdBQVc7RUFDWCx5Q0FBeUM7RUFDekMsbUJBQW1CO0VBQ25CLGdCQUFnQjtFQUNoQixZQUFZO0VBQ1osa0JBQWtCO0VBQ2xCLG1CQUFtQjtBQU12Qjs7QUFKQTtFQUNJLFdBQVc7QUFPZiIsImZpbGUiOiJtZXNzYWdlLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5tZXNzYWdle1xyXG4gcGFkZGluZzoxMHB4O1xyXG4gYm9yZGVyLXJhZGl1czoxMHB4O1xyXG4gbWFyZ2luLWJvdHRvbTo0cHg7XHJcbiB3aGl0ZS1zcGFjZTogcHJlLXdyYXA7XHJcbn1cclxuLm90aGVyLW1lc3NhZ2V7XHJcbiAgICBiYWNrZ3JvdW5kOiB2YXIoLS1pb24tY29sb3ItdGVydGlhcnkpO1xyXG4gICAgY29sb3I6ICNmZmY7XHJcbn1cclxuLm15LW1lc3NhZ2V7XHJcbiAgICBiYWNrZ3JvdW5kOiB2YXIoLS1pb24tY29sb3Itc2Vjb25kYXJ5KTtcclxuICAgIGNvbG9yOiNmZmY7XHJcbn1cclxuLnRpbWV7XHJcbiAgICBjb2xvcjogI2RmZGZkZjtcclxuICAgIGZsb2F0OiByaWdodDtcclxuICAgIGZvbnQtc2l6ZTogc21hbGw7XHJcbn1cclxuLm1zZy1idG57XHJcbiAgLS1wYWRkaW5nLXN0YXJ0OjAuNWVtO1xyXG4gIC0tcGFkZGluZy1lbmQ6MC41ZW07XHJcbiAgbWFyZ2luLXRvcDogMTBweDtcclxufVxyXG4ubWVzc2FnZS1pbnB1dHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgYm9yZGVyOiAxcHggc29saWQgdmFyKC0taW9uLWNvbG9yLW1lZGl1bSk7XHJcbiAgICBib3JkZXItcmFkaXVzOiAxMHB4O1xyXG4gICAgYmFja2dyb3VuZDogI2ZmZjtcclxuICAgIHJlc2l6ZTogbm9uZTtcclxuICAgIHBhZGRpbmctbGVmdDogMTBweDtcclxuICAgIHBhZGRpbmctcmlnaHQ6IDEwcHg7XHJcbn1cclxuaW9uLWZhYntcclxuICAgIHdpZHRoOiAxMDAlO1xyXG59Il19 */\";"],"sourceRoot":"webpack:///"}