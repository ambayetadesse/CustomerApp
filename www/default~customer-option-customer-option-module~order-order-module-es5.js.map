{"version":3,"sources":["webpack:///src/app/Service/order-detail.service.ts","webpack:///src/app/Service/food.service.ts","webpack:///src/app/Service/order.service.ts","webpack:///src/app/customer-option/customer-option.page.ts","webpack:///src/app/customer-option/customer-option.page.html","webpack:///src/app/customer-option/customer-option.page.scss","webpack:///src/app/Service/shared.service.ts"],"names":["OrderDetailService","http","APIURL","apiURL","val","post","get","put","id","toPromise","error","status","json","providedIn","FoodService","OrderService","sharedService","cart","cartItemCount","RestaurantId","orderStatus","order","orderItemCount","driverId","items","amount","forEach","el","index","indexOf","c","orderDetailsId","splice","next","element","data","CookingTime","DeliveryTime","Description","Name","Price","categoryId","Food","picture","restaurantId","type","push","value","product","added","p","entries","CustomerOptionPage","modalControler","orderService","foodService","orderDetailsService","router","getAllOrder","subscribe","res","listOfOrder","getFood","getOrderDetails","getAllFood","listOfFood","getAllOrderDetail","listOfOrderDetails","find","DateTime","dateTime","Customer","customer","Location","location","OrderStatus","orderStatuses","Total","total","Driver","driver","Vehicle","vehicle","orderLocation","restaurantStatus","restaurantStatuses","customerStatus","statuses","updateOrder","alert","toString","isLoading","countItems","orderDetails","filter","orderId","foodId","cookingTime","deliveryTime","description","name","price","qty","length","console","log","addOrder","navigate","dismiss","selector","template","SharedService","currentAddress","restaurant","RestaurantLocation","resId","listOfCatagoryFilter","deriverId","customerId","driverName"],"mappings":"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","file":"default~customer-option-customer-option-module~order-order-module-es5.js","sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { AppError } from '../common/app-error';\nimport { BadInput } from '../common/bad-input';\nimport { NotFoundError } from '../common/not-found-error';\nimport { environment } from 'src/environments/environment.prod';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OrderDetailService {\n\n  readonly APIURL = environment.apiURL;\n  constructor(private http: HttpClient) {\n  }\n  create(val: any) {\n    return this.http.post(this.APIURL + '/orderdetail', val);\n  }\n  getAllOrderDetail(): Observable<any[]> {\n    return this.http.get<any>(this.APIURL + '/orderdetail');\n  }\n  updateOrderDetail(val: any) {\n    return this.http.put(this.APIURL + '/orderdetail/', val);\n  }\n  removeOrderDetail(id) {\n    return this.http.delete(this.APIURL + '/orderdetail/' + id).toPromise();\n  }\n\n  private handleError(error: Response) {\n    if (error.status === 400) {\n      return Observable.throw(new BadInput(error.json()));\n    }\n    if (error.status === 404) {\n      return Observable.throw(new NotFoundError());\n    }\n    return Observable.throw(new AppError(error));\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment.prod';\nimport { AppError } from '../common/app-error';\nimport { BadInput } from '../common/bad-input';\nimport { NotFoundError } from '../common/not-found-error';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FoodService {\n  readonly APIURL = environment.apiURL;\n  constructor(private http: HttpClient) {\n  }\n  create(val: any) {\n    return this.http.post(this.APIURL + '/food', val);\n  }\n  getAllFood(): Observable<any[]> {\n    return this.http.get<any>(this.APIURL + '/food');\n  }\n  updateFood(val: any) {\n    return this.http.put(this.APIURL + '/food/', val);\n  }\n  removeFood(id) {\n    return this.http.delete(this.APIURL + '/food/' + id).toPromise();\n  }\n  private handleError(error: Response) {\n    if (error.status === 400) {\n      return Observable.throw(new BadInput(error.json()));\n    }\n\n    if (error.status === 404) {\n      return Observable.throw(new NotFoundError());\n    }\n\n    return Observable.throw(new AppError(error));\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { SharedService } from './shared.service';\nimport { environment } from 'src/environments/environment.prod';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OrderService {\n  constructor(private http: HttpClient,\n    private sharedService: SharedService) {\n  }\n  readonly APIURL = environment.apiURL;\n  private cart = [];\n  private cartItemCount = new BehaviorSubject(0);\n  RestaurantId = new BehaviorSubject<any>({});\n  orderStatus = new BehaviorSubject<any>({});\n\n  amount: number;\n  private order = [];\n  private orderItemCount = new BehaviorSubject(0);\n  create(val: any) {\n    return this.http.post(this.APIURL + '/order', val);\n  }\n  getAllOrder(): Observable<any[]> {\n    return this.http.get<any>(this.APIURL + '/order');\n  }\n\n  updateOrder(val: any) {\n    return this.http.put(this.APIURL + '/order/', val);\n  }\n  removeOrder(id) {\n    return this.http.delete(this.APIURL + '/order/' + id).toPromise();\n  }\n\n  // create(orderObj) {\n  //   let values = this.orderCollectionList.add(orderObj)\n  //     .then((docRef) => {\n  //       this.sharedService.orderId.next(docRef.id);\n  //     })\n  //   return values;\n  // }\n\n  getOrderBy(id) {\n    return this.http.get<any>(this.APIURL + '/order' + id);\n  }\n  getOrderByDriverId(driverId) {\n    return this.http.get<any>(this.APIURL + '/order' + driverId);\n  }\n  getCart() {\n    return this.cart;\n  }\n  getOrders() {\n    return this.order;\n  }\n  getCartItemCount() {\n    return this.cartItemCount;\n  }\n  getOrderItemCount() {\n    return this.orderItemCount;\n  }\n  getRestaurantId() {\n    return this.RestaurantId;\n  }\n  getOrderStatus() {\n    return this.orderStatus;\n  }\n  addOrder(items) {\n    this.order = [];\n    this.amount = 0;\n    this.order.forEach(el => {\n      const index = this.order.indexOf(c => c.orderDetailsId === el.orderDetailsId);\n      this.order.splice(index, 1);\n    });\n    this.orderItemCount.next(0);\n    items.forEach(element => {\n      this.amount = this.amount + element.amount;\n      const data = {\n        CookingTime: element.CookingTime,\n        DeliveryTime: element.DeliveryTime,\n        Description: element.Description,\n        Name: element.Name,\n        Price: element.Price,\n        amount: element.amount,\n        categoryId: element.categoryId,\n        id: element.Food,\n        picture: element.picture,\n        restaurantId: element.restaurantId,\n        type: element.type,\n        orderDetailsId: element.orderDetailsId,\n      };\n      this.order.push(data);\n    });\n    this.orderItemCount.next(this.orderItemCount.value + this.amount);\n  }\n  addProduct(product) {\n    let added = false;\n    for (const p of this.cart) {\n      if (p.id === product.id) {\n        p.amount += 1;\n        added = true;\n        break;\n      }\n    }\n    if (!added) {\n      product.amount = 1;\n      this.cart.push(product);\n    }\n    this.cartItemCount.next(this.cartItemCount.value + 1);\n  }\n\n  decreaseProduct(product) {\n    for (const [index, p] of this.cart.entries()) {\n      if (p.id === product.id) {\n        p.amount -= 1;\n        if (p.amount === 0) {\n          this.cart.splice(index, 1);\n        }\n      }\n    }\n    this.cartItemCount.next(this.cartItemCount.value - 1);\n  }\n\n  removeProduct(product) {\n    for (const [index, p] of this.cart.entries()) {\n      if (p.id === product.id) {\n        this.cartItemCount.next(this.cartItemCount.value - p.amount);\n        this.cart.splice(index, 1);\n      }\n    }\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ModalController } from '@ionic/angular';\nimport { Food, Order, OrderDetail } from 'src/Table/table';\nimport { FoodService } from '../Service/food.service';\nimport { OrderDetailService } from '../Service/order-detail.service';\nimport { OrderService } from '../Service/order.service';\n\n@Component({\n  selector: 'app-customer-option',\n  templateUrl: './customer-option.page.html',\n  styleUrls: ['./customer-option.page.scss'],\n})\nexport class CustomerOptionPage implements OnInit {\n  @Input() public data;\n  @Input() public id;\n  listOfOrder:Order[];\n  isLoading: boolean;\n  countItems: number;\n  cart: any[];\n  listOfOrderDetails: OrderDetail[];\n  listOfFood: Food[];\n  constructor( private modalControler:ModalController,\n    private orderService:OrderService,\n    private foodService: FoodService,\n    private orderDetailsService: OrderDetailService,\n    private router:Router) { }\n\n  ngOnInit() {\n   this.orderService.getAllOrder().subscribe(res=>{\n     this.listOfOrder = res;\n   })\n   this.getFood();\n   this.getOrderDetails();\n  }\n  getFood() {\n    this.foodService.getAllFood().subscribe(res => {\n      this.listOfFood = res;\n    })\n  }\n  getOrderDetails() {\n    this.orderDetailsService.getAllOrderDetail().subscribe(res => {\n      this.listOfOrderDetails = res;\n    })\n  }\n  reOrder(){\n\n  }\n  CancelOrder(){\n   let order = this.listOfOrder.find(c=>c.id==this.data.id);\n   let data ={\n    id: order.id,\n    RestaurantId: order.restaurantId,\n    DateTime: order.dateTime,\n    Customer: order.customer,\n    Location:order.location,\n    OrderStatus: order.orderStatuses,\n    Total: order.total,\n    Driver: order.driver,\n    Vehicle: order.vehicle,\n    orderLocation: order.orderLocation,\n    restaurantStatus:order.restaurantStatuses,\n    customerStatus:\"false\",\n    status:order.statuses\n   }\n   this.orderService.updateOrder(data).subscribe(res=>{\n     alert(res.toString());\n   })\n  }\n  viewOrder(id){\n    this.isLoading = false;\n    this.countItems = 0;\n    this.cart = [];\n    // let orderNo = this.listOfOrder.find(c => c.id == id).orderNo;\n    let orderDetails = this.listOfOrderDetails.filter(c => c.orderId == id);\n    orderDetails.forEach(el => {\n      let data = {\n        CookingTime: this.listOfFood.find(c => c.id == el.foodId).cookingTime,\n        DeliveryTime: this.listOfFood.find(c => c.id == el.foodId).deliveryTime,\n        Description: this.listOfFood.find(c => c.id == el.foodId).description,\n        Name: this.listOfFood.find(c => c.id == el.foodId).name,\n        Price: this.listOfFood.find(c => c.id == el.foodId).price,\n        amount: el.qty,\n        categoryId: this.listOfFood.find(c => c.id == el.foodId).categoryId,\n        id: el.foodId,\n        picture: this.listOfFood.find(c => c.id == el.foodId).picture,\n        restaurantId: this.listOfFood.find(c => c.id == el.foodId).restaurantId,\n        type: this.listOfFood.find(c => c.id == el.foodId).type,\n        orderDetailsId: el.id,\n        orderStatus: true\n      }\n      this.cart.push(data);\n      this.countItems = this.cart.length;\n      console.log(this.countItems)\n    });\n    this.orderService.addOrder(this.cart);\n    this.router.navigate([\"/menu/order-history\"]);\n    this.modalControler.dismiss();\n  }\n  close(){\n    this.modalControler.dismiss();\n    }\n}\n","export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>What do you want to do ?</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n<ion-list>\\n  <ion-item>\\n    <ion-button expand=\\\"full\\\"  fill=\\\"clear\\\" (click)=\\\"reOrder()\\\"> Re-Order</ion-button>\\n  </ion-item>\\n  <ion-item>\\n    <ion-button expand=\\\"full\\\"  fill=\\\"clear\\\" (click)=\\\"CancelOrder()\\\">Cancel Order</ion-button>\\n  </ion-item>\\n  <ion-item>\\n    <ion-button fill=\\\"clear\\\" (click)=\\\"viewOrder(id)\\\"> View order  </ion-button>\\n  </ion-item>\\n</ion-list>\\n<ion-footer>\\n  <ion-button expand=\\\"full\\\" fill=\\\"clear\\\" (click)=\\\"close()\\\">\\n    <ion-icon name=\\\"close-outline\\\"></ion-icon>&nbsp;&nbsp; Cancel</ion-button>\\n</ion-footer>\\n</ion-content>\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJjdXN0b21lci1vcHRpb24ucGFnZS5zY3NzIn0= */\";","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\n@Injectable({\n  providedIn: 'root'\n})\nexport class SharedService {\n  currentAddress = new BehaviorSubject<any>({});\n  restaurant = new BehaviorSubject<any>({});\n  status = new BehaviorSubject<any>({});\n  location = new BehaviorSubject<any>({});\n  orderId = new BehaviorSubject<any> ({});\n  RestaurantLocation = new BehaviorSubject<any>({});\n  resId = new BehaviorSubject<any>({});\n  listOfCatagoryFilter = new BehaviorSubject<any>({});\n  deriverId = new BehaviorSubject<any>({});\n  customerId = new BehaviorSubject<any>({});\n  driverName = new BehaviorSubject<any>({});\n\n  getCurrentAddress(){\n    return this.currentAddress;\n  }\n  getMenuFilter(){\n    return this.listOfCatagoryFilter;\n  }\n  getLocation(){\n    return this.location;\n  }\n  getStatus(){\n    return this.status;\n  }\n  getRestaurantLocation(){\n    return this.RestaurantLocation;\n  }\n  getRestaurantId(){\n    return this.resId;\n  }\n  getDriverId(){\n    return this.deriverId;\n  }\n  getCustomerId(){\n    return this.customerId;\n  }\n  getDriverName(){\n    return this.driverName;\n  }\n  constructor() { }\n}\n"]}