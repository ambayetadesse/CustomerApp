{"version":3,"sources":["webpack:///src/app/Service/restaurant.service.ts","webpack:///src/app/cart-modal/cart-modal.page.html","webpack:///src/app/Service/order-detail.service.ts","webpack:///src/app/Service/food.service.ts","webpack:///src/app/cart-modal/cart-modal.page.scss","webpack:///src/app/Service/order.service.ts","webpack:///src/app/cart-modal/cart-modal.page.ts","webpack:///src/app/Service/shared.service.ts"],"names":["RestaurantService","http","APIURL","apiURL","val","post","restaurant","get","put","id","toPromise","error","status","json","providedIn","OrderDetailService","FoodService","OrderService","sharedService","cart","cartItemCount","RestaurantId","orderStatus","order","orderItemCount","driverId","items","amount","forEach","el","index","indexOf","c","orderDetailsId","splice","next","element","data","CookingTime","DeliveryTime","Description","Name","Price","categoryId","Food","picture","restaurantId","type","push","value","product","added","p","entries","CartModalPage","modalCtrl","alertCtrl","orderService","fb","router","restaurantService","orderDetailService","foodService","regform","group","currentDate","Date","toISOString","minDate","maxDate","statusDriver","isChecked","statusRestaurant","transactionType","DeliveryDate","DeliveryAddress","DeliveryFee","date","setDate","getDate","getCart","getCartItemCount","getRestaurantId","getRestaurant","getFood","readNOId","getAllRestaurant","subscribe","res","listOfRestaurant","getAllFood","listOfFood","No","getAllOrder","result","length","orderNo","decreaseProduct","addProduct","presentAlertConfirm","reduce","i","j","price","getTotal","dismiss","navigate","Total","find","accountId","toString","dateTime","customer","localStorage","getItem","location","orderStatuses","total","getGrandTotal","driver","vehicle","orderLocation","restaurantStatuses","customerStatus","statuses","create","orderDetails","orderId","foodId","qty","presentAlert","message","cssClass","header","buttons","alert","present","text","role","handler","blah","console","log","removeProduct","selector","template","SharedService","currentAddress","RestaurantLocation","resId","listOfCatagoryFilter","deriverId","customerId","driverName"],"mappings":"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","file":"default~cart-modal-cart-modal-module~details-details-module-es5.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { BadInput } from '../common/bad-input';\nimport { NotFoundError } from '../common/not-found-error';\nimport { AppError } from '../common/app-error';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment.prod';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RestaurantService {\n  readonly APIURL = environment.apiURL;\n  constructor(private http: HttpClient) {\n  }\n  create(val: any) {\n    return this.http.post(this.APIURL + '/restaurant', val);\n  }\n  getAllRestaurant(): Observable<any[]> {\n    var restaurant = this.http.get<any>(this.APIURL + '/restaurant')\n    return restaurant;\n  }\n  updateRestaurant(val: any) {\n    return this.http.put(this.APIURL + '/restaurant/', val);\n  }\n  removeRestaurant(id) {\n    return this.http.delete(this.APIURL + '/restaurant/' + id).toPromise();\n  }\n\n  private handleError(error: Response) {\n    if (error.status === 400) {\n      return Observable.throw(new BadInput(error.json()));\n    }\n\n    if (error.status === 404) {\n      return Observable.throw(new NotFoundError());\n    }\n\n    return Observable.throw(new AppError(error));\n  }\n}\n","export default \"<ion-header>\\n  <ion-toolbar color=\\\"light\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-button fill=\\\"solid\\\" shape=\\\"round\\\" color=\\\"light\\\" (click)=\\\"onclick()\\\">\\n        <ion-icon slot=\\\"icon-only\\\" name=\\\"arrow-back\\\" color=\\\"primary\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n    <ion-title style=\\\"text-align: center;\\\">Order Details</ion-title>\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-button  >\\n        <ion-badge *ngIf=\\\"cart.length > 0\\\">{{ cartItemCount | async }}</ion-badge>\\n        <ion-icon slot=\\\"icon-only\\\" class=\\\"cart-icon\\\" name=\\\"cart\\\"></ion-icon>\\n      </ion-button> \\n    </ion-buttons>\\n   </ion-toolbar>\\n</ion-header>\\n\\n<ion-content fullscreen>\\n  <!-- <div class=\\\"ion-text-end\\\">\\n    <ion-button (click)=\\\"close()\\\" fill=\\\"clear\\\" color=\\\"dark\\\">\\n      <ion-icon name=\\\"close\\\" slot=\\\"start\\\"></ion-icon>\\n    </ion-button>\\n  </div> -->\\n  <div class=\\\"ion-padding\\\">\\n    <ion-list>\\n      <ion-item *ngFor=\\\"let p of cart\\\" class=\\\"ion-text-wrap\\\">\\n        <ion-grid>\\n          <ion-row class=\\\"ion-align-items-center\\\">\\n            <ion-col size=\\\"2\\\" class=\\\"ion-align-self-center\\\">\\n              <ion-button color=\\\"medium\\\" fill=\\\"clear\\\" (click)=\\\"decreaseCartItem(p)\\\">\\n                <ion-icon name=\\\"remove-circle\\\" slot=\\\"icon-only\\\"></ion-icon>\\n              </ion-button>\\n            </ion-col>\\n            <ion-col size=\\\"1\\\" class=\\\"ion-align-self-center\\\">\\n              {{ p.amount }}\\n            </ion-col>\\n            <ion-col size=\\\"2\\\" class=\\\"ion-align-self-center\\\">\\n              <ion-button color=\\\"medium\\\" fill=\\\"clear\\\" (click)=\\\"increaseCartItem(p)\\\">\\n                <ion-icon name=\\\"add-circle\\\" slot=\\\"icon-only\\\"></ion-icon>\\n              </ion-button>\\n            </ion-col>\\n            <ion-col size=\\\"2\\\" offset=\\\"5\\\">\\n              <ion-button color=\\\"medium\\\" fill=\\\"clear\\\" (click)=\\\"removeCartItem(p)\\\">\\n                <ion-icon name=\\\"close-circle\\\" slot=\\\"icon-only\\\"></ion-icon>\\n              </ion-button>\\n            </ion-col>\\n          </ion-row>\\n          <ion-row>\\n            <ion-col size=\\\"5\\\">\\n              <b>{{ p.Name }}</b>\\n            </ion-col>\\n            <ion-col size=\\\"4\\\">\\n              <b>{{ p.Price | currency:'ETB'}}</b>\\n            </ion-col>\\n            <ion-col size=\\\"3\\\" class=\\\"ion-text-end\\\">\\n              {{ p.amount * p.Price | currency:'ETB' }}\\n            </ion-col>\\n          </ion-row>\\n        </ion-grid>\\n      </ion-item>\\n      <ion-item>\\n        <ion-grid>\\n          <ion-row>\\n            <ion-col size=\\\"9\\\">\\n             Sub Total:\\n            </ion-col>\\n            <ion-col size=\\\"3\\\" class=\\\"ion-text-end\\\">\\n              {{ getTotal() | currency:'ETB' }}\\n            </ion-col>\\n          </ion-row>\\n        </ion-grid>\\n      </ion-item>\\n      <ion-item>\\n        <ion-grid>\\n          <ion-row>\\n            <ion-col size=\\\"9\\\">\\n             Grand Total:\\n            </ion-col>\\n            <ion-col size=\\\"3\\\" class=\\\"ion-text-end\\\">\\n              {{ getGrandTotal() | currency:'ETB' }}\\n            </ion-col>\\n          </ion-row>\\n        </ion-grid>\\n      </ion-item>\\n    </ion-list>\\n    <form [formGroup]=\\\"regform\\\">\\n    <ion-item>\\n      <ion-label>Transation Type</ion-label>\\n      <ion-select interface=\\\"popover\\\" formControlName=\\\"transactionType\\\">\\n        <ion-select-option value=\\\"Delivery\\\">Delivery</ion-select-option>\\n        <ion-select-option value=\\\"Pickup\\\">Pickup</ion-select-option>\\n      </ion-select>\\n    </ion-item>\\n    <ion-item>\\n      <ion-label>Delivery Date</ion-label>\\n      <ion-datetime formControlName=\\\"DeliveryDate\\\" display-format=\\\"MMM DD, YYYY HH:mm:ss\\\" value=\\\"1990-02-19T07:43Z\\\" [(ngModel)]=\\\"currentDate\\\"></ion-datetime>\\n    </ion-item>\\n    <ion-item>\\n      <ion-label>Delivery fee</ion-label>\\n      <ion-input formControlName=\\\"DeliveryFee\\\" type=\\\"number\\\" (keyup)=\\\"getGrandTotal()\\\"></ion-input>\\n    </ion-item>\\n    <ion-item>\\n      <ion-label>Delivery Time</ion-label>\\n      <ion-datetime formControlName=\\\"DeliveryTime\\\" display-format=\\\"h:mm A\\\" picker-format=\\\"h:mm A\\\" value=\\\"1990-02-19T07:43Z\\\"></ion-datetime>\\n    </ion-item>\\n    <ion-item>\\n      <ion-grid>\\n        <ion-row>\\n          <ion-col size=\\\"1\\\">\\n            <ion-label>\\n              <ion-icon style=\\\"height: 27px;\\n              width: 19px;\\\" name=\\\"location-outline\\\"></ion-icon>\\n            </ion-label>\\n           </ion-col>\\n          <ion-col size=\\\"8\\\">\\n           <ion-label>\\n             <p>Delivery to current Address</p>\\n             <p></p>\\n           </ion-label>\\n          </ion-col>\\n          <ion-col size=\\\"3\\\">\\n            <ion-button (click)=\\\"location()\\\">\\n              change\\n            </ion-button>\\n          </ion-col>\\n        </ion-row>\\n      </ion-grid>\\n    </ion-item>\\n    <ion-button expand=\\\"full\\\" (click)=\\\"order(cart)\\\" slot=\\\"fixed\\\">\\n      Order\\n    </ion-button>\\n   \\n  </form>\\n  </div>\\n</ion-content>\";","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { AppError } from '../common/app-error';\nimport { BadInput } from '../common/bad-input';\nimport { NotFoundError } from '../common/not-found-error';\nimport { environment } from 'src/environments/environment.prod';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OrderDetailService {\n\n  readonly APIURL = environment.apiURL;\n  constructor(private http: HttpClient) {\n  }\n  create(val: any) {\n    return this.http.post(this.APIURL + '/orderdetail', val);\n  }\n  getAllOrderDetail(): Observable<any[]> {\n    return this.http.get<any>(this.APIURL + '/orderdetail');\n  }\n  updateOrderDetail(val: any) {\n    return this.http.put(this.APIURL + '/orderdetail/', val);\n  }\n  removeOrderDetail(id) {\n    return this.http.delete(this.APIURL + '/orderdetail/' + id).toPromise();\n  }\n\n  private handleError(error: Response) {\n    if (error.status === 400) {\n      return Observable.throw(new BadInput(error.json()));\n    }\n    if (error.status === 404) {\n      return Observable.throw(new NotFoundError());\n    }\n    return Observable.throw(new AppError(error));\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment.prod';\nimport { AppError } from '../common/app-error';\nimport { BadInput } from '../common/bad-input';\nimport { NotFoundError } from '../common/not-found-error';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FoodService {\n  readonly APIURL = environment.apiURL;\n  constructor(private http: HttpClient) {\n  }\n  create(val: any) {\n    return this.http.post(this.APIURL + '/food', val);\n  }\n  getAllFood(): Observable<any[]> {\n    return this.http.get<any>(this.APIURL + '/food');\n  }\n  updateFood(val: any) {\n    return this.http.put(this.APIURL + '/food/', val);\n  }\n  removeFood(id) {\n    return this.http.delete(this.APIURL + '/food/' + id).toPromise();\n  }\n  private handleError(error: Response) {\n    if (error.status === 400) {\n      return Observable.throw(new BadInput(error.json()));\n    }\n\n    if (error.status === 404) {\n      return Observable.throw(new NotFoundError());\n    }\n\n    return Observable.throw(new AppError(error));\n  }\n}\n","export default \"ion-badge {\\n  color: #fff;\\n  position: absolute;\\n  top: -9px;\\n  right: 2px;\\n  border-radius: 100%;\\n}\\n\\n.cart-icon {\\n  font-size: 50px;\\n}\\n\\n.cart-length {\\n  color: var(--ion-color-primary);\\n  position: absolute;\\n  top: 18px;\\n  left: 25px;\\n  font-weight: 600;\\n  font-size: 1em;\\n  min-width: 25px;\\n  z-index: 10;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXGNhcnQtbW9kYWwucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksV0FBVztFQUNYLGtCQUFrQjtFQUNsQixTQUFTO0VBQ1QsVUFBVTtFQUNWLG1CQUFtQjtBQUN2Qjs7QUFFQTtFQUNFLGVBQWU7QUFDakI7O0FBRUE7RUFDRSwrQkFBK0I7RUFDL0Isa0JBQWtCO0VBQ2xCLFNBQVM7RUFDVCxVQUFVO0VBQ1YsZ0JBQWdCO0VBQ2hCLGNBQWM7RUFDZCxlQUFlO0VBQ2YsV0FBVztBQUNiIiwiZmlsZSI6ImNhcnQtbW9kYWwucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiaW9uLWJhZGdlIHtcclxuICAgIGNvbG9yOiAjZmZmO1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgdG9wOiAtOXB4O1xyXG4gICAgcmlnaHQ6IDJweDtcclxuICAgIGJvcmRlci1yYWRpdXM6IDEwMCU7XHJcbn1cclxuIFxyXG4uY2FydC1pY29uIHtcclxuICBmb250LXNpemU6IDUwcHg7XHJcbn1cclxuIFxyXG4uY2FydC1sZW5ndGgge1xyXG4gIGNvbG9yOiB2YXIoLS1pb24tY29sb3ItcHJpbWFyeSk7XHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIHRvcDogMThweDtcclxuICBsZWZ0OiAyNXB4O1xyXG4gIGZvbnQtd2VpZ2h0OiA2MDA7XHJcbiAgZm9udC1zaXplOiAxZW07XHJcbiAgbWluLXdpZHRoOiAyNXB4O1xyXG4gIHotaW5kZXg6IDEwO1xyXG59XHJcbiJdfQ== */\";","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { SharedService } from './shared.service';\nimport { environment } from 'src/environments/environment.prod';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OrderService {\n  constructor(private http: HttpClient,\n    private sharedService: SharedService) {\n  }\n  readonly APIURL = environment.apiURL;\n  private cart = [];\n  private cartItemCount = new BehaviorSubject(0);\n  RestaurantId = new BehaviorSubject<any>({});\n  orderStatus = new BehaviorSubject<any>({});\n\n  amount: number;\n  private order = [];\n  private orderItemCount = new BehaviorSubject(0);\n  create(val: any) {\n    return this.http.post(this.APIURL + '/order', val);\n  }\n  getAllOrder(): Observable<any[]> {\n    return this.http.get<any>(this.APIURL + '/order');\n  }\n\n  updateOrder(val: any) {\n    return this.http.put(this.APIURL + '/order/', val);\n  }\n  removeOrder(id) {\n    return this.http.delete(this.APIURL + '/order/' + id).toPromise();\n  }\n\n  // create(orderObj) {\n  //   let values = this.orderCollectionList.add(orderObj)\n  //     .then((docRef) => {\n  //       this.sharedService.orderId.next(docRef.id);\n  //     })\n  //   return values;\n  // }\n\n  getOrderBy(id) {\n    return this.http.get<any>(this.APIURL + '/order' + id);\n  }\n  getOrderByDriverId(driverId) {\n    return this.http.get<any>(this.APIURL + '/order' + driverId);\n  }\n  getCart() {\n    return this.cart;\n  }\n  getOrders() {\n    return this.order;\n  }\n  getCartItemCount() {\n    return this.cartItemCount;\n  }\n  getOrderItemCount() {\n    return this.orderItemCount;\n  }\n  getRestaurantId() {\n    return this.RestaurantId;\n  }\n  getOrderStatus() {\n    return this.orderStatus;\n  }\n  addOrder(items) {\n    this.order = [];\n    this.amount = 0;\n    this.order.forEach(el => {\n      const index = this.order.indexOf(c => c.orderDetailsId === el.orderDetailsId);\n      this.order.splice(index, 1);\n    });\n    this.orderItemCount.next(0);\n    items.forEach(element => {\n      this.amount = this.amount + element.amount;\n      const data = {\n        CookingTime: element.CookingTime,\n        DeliveryTime: element.DeliveryTime,\n        Description: element.Description,\n        Name: element.Name,\n        Price: element.Price,\n        amount: element.amount,\n        categoryId: element.categoryId,\n        id: element.Food,\n        picture: element.picture,\n        restaurantId: element.restaurantId,\n        type: element.type,\n        orderDetailsId: element.orderDetailsId,\n      };\n      this.order.push(data);\n    });\n    this.orderItemCount.next(this.orderItemCount.value + this.amount);\n  }\n  addProduct(product) {\n    let added = false;\n    for (const p of this.cart) {\n      if (p.id === product.id) {\n        p.amount += 1;\n        added = true;\n        break;\n      }\n    }\n    if (!added) {\n      product.amount = 1;\n      this.cart.push(product);\n    }\n    this.cartItemCount.next(this.cartItemCount.value + 1);\n  }\n\n  decreaseProduct(product) {\n    for (const [index, p] of this.cart.entries()) {\n      if (p.id === product.id) {\n        p.amount -= 1;\n        if (p.amount === 0) {\n          this.cart.splice(index, 1);\n        }\n      }\n    }\n    this.cartItemCount.next(this.cartItemCount.value - 1);\n  }\n\n  removeProduct(product) {\n    for (const [index, p] of this.cart.entries()) {\n      if (p.id === product.id) {\n        this.cartItemCount.next(this.cartItemCount.value - p.amount);\n        this.cart.splice(index, 1);\n      }\n    }\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AlertController, ModalController } from '@ionic/angular';\nimport { BehaviorSubject } from 'rxjs';\nimport { Food, Restaurant } from 'src/Table/table';\nimport { FoodService } from '../Service/food.service';\nimport { OrderDetailService } from '../Service/order-detail.service';\nimport { OrderService } from '../Service/order.service';\nimport { RestaurantService } from '../Service/restaurant.service';\nimport { SharedService } from '../Service/shared.service';\n\n@Component({\n  selector: 'app-cart-modal',\n  templateUrl: './cart-modal.page.html',\n  styleUrls: ['./cart-modal.page.scss'],\n})\nexport class CartModalPage implements OnInit {\n  cart: any[] = [];\n  cartItemCount: BehaviorSubject<number>;\n  id: any;\n  regform = this.fb.group({});\n  currentDate = new Date().toISOString();\n  minDate = new Date().toISOString();\n  maxDate = new Date().toISOString();\n  listOfRestaurant: Restaurant[];\n  orderId: any;\n  x: number;\n  listOfFood: Food[];\n  orderNo: number;\n  restaurantId: any;\n  Total: number;\n  status: {  val: string; isChecked: boolean; }[];\n  statusRestaurant: { val: string; isChecked: boolean; }[];\n  statusDriver: { val: string; isChecked: boolean; }[];\n  constructor(private modalCtrl: ModalController,\n              private alertCtrl: AlertController,\n              private orderService: OrderService,\n              private fb: FormBuilder,\n              private router: Router,\n              private restaurantService: RestaurantService,\n              private orderDetailService: OrderDetailService,\n              private foodService: FoodService,\n              private sharedService: SharedService) {\n      this.statusDriver = [\n        {  val: 'picked', isChecked: false },\n        { val: 'start moving', isChecked: false },\n        {  val: 'delivered', isChecked: false }\n      ];\n      this.statusRestaurant = [\n         {  val: 'order received', isChecked: true },\n         {  val: 'start cooking', isChecked: false },\n         {  val: 'cooked', isChecked: false },\n         { val: 'ready to service', isChecked: false }\n       ];\n      this.status = [\n         { val: 'Accept', isChecked: false},\n         { val: 'Reject', isChecked: false}\n       ];\n    }\n\n  ngOnInit() {\n    this.regform = this.fb.group({\n      transactionType: [''],\n      DeliveryDate: [''],\n      DeliveryTime: [''],\n      DeliveryAddress: [''],\n      DeliveryFee: ['']\n    });\n    // setting min date\n    let date: Date = new Date();\n    date.setDate(date.getDate() - 5);\n    this.minDate = date.toISOString();\n    // setting max date\n    date = new Date();\n    date.setDate(date.getDate() + 5);\n    this.maxDate = date.toISOString();\n    /// to get data form service\n    this.cart = this.orderService.getCart();\n    this.cartItemCount = this.orderService.getCartItemCount();\n    this.id = this.orderService.getRestaurantId().value;\n    // console.log(this.id)\n    this.getRestaurant();\n    this.getFood();\n    this.readNOId();\n  }\n  getRestaurant() {\n    this.restaurantService.getAllRestaurant().subscribe(res => {\n      this.listOfRestaurant = res;\n    });\n  }\n  getFood() {\n    this.foodService.getAllFood().subscribe(res => {\n      this.listOfFood = res;\n    });\n  }\n  readNOId() {\n    let No = 0;\n    this.orderService.getAllOrder().subscribe((result) => {\n      if (result.length === 0) { No = 1; }\n      else { No = result.length + 1; }\n      this.orderNo = + No;\n    });\n  }\n  decreaseCartItem(product) {\n    this.orderService.decreaseProduct(product);\n  }\n\n  increaseCartItem(product) {\n    this.orderService.addProduct(product);\n  }\n\n  removeCartItem(product) {\n    // this.orderService.removeProduct(product);\n    this.presentAlertConfirm(product);\n  }\n\n  getTotal() {\n    return this.cart.reduce((i, j) => i + j.amount * j.price, 0);\n  }\n\n  getGrandTotal(){\n    return this.getTotal() + this.regform.get('DeliveryFee').value;\n  }\n  close() {\n    this.modalCtrl.dismiss();\n  }\n  location(){\n    this.sharedService.status.next('cart-modal');\n    this.router.navigate(['/menu/location']);\n  }\n  order(cart) {\n    this.Total = 0;\n    cart.forEach(element => {\n      this.restaurantId = element.restaurantId;\n    });\n    const res = this.listOfRestaurant.find(c => c.id === +this.restaurantId);\n    const order = {\n      restaurantId:res.accountId.toString(),\n      dateTime: this.regform.get('DeliveryDate').value,\n      customer: localStorage.getItem('userId'),\n      location: res.location, // to insert loging user (customer) of location\n      orderStatuses: this.statusDriver,\n      total: this.getGrandTotal(),\n      driver: 'null',\n      vehicle: 'null',\n      orderLocation: 'null', // or droupLocation\n      restaurantStatuses: this.statusRestaurant,\n      customerStatus: 'true',\n      statuses: this.status\n    };\n    this.orderService.create(order).subscribe(async res => {\n     // await this.loader.dismiss().then();\n      // alert(res.toString());\n       this.orderService.getAllOrder().subscribe(res=>{\n        cart.forEach(element => {\n          this.restaurantId = element.restaurantId;\n          this.Total = this.Total + (element.Price * element.amount);\n          const orderDetails = {\n            orderId: res[0].id,\n            foodId: element.id,\n            qty: element.amount,\n            price: element.price\n          };\n          this.orderDetailService.create(orderDetails).subscribe( res => {\n         // alert(res.toString());\n          });\n          this.presentAlert('Add order succesfuly');\n          this.router.navigate(['/menu/order']);\n        });\n       });\n    });\n \n  }\n  async presentAlert(message) {\n    const alert = await this.alertCtrl.create({\n      cssClass: 'my-custom-class',\n       header: 'Order',\n      // subHeader: 'Subtitle',\n      message,\n      buttons: ['OK']\n    });\n    await alert.present();\n  }\n  async presentAlertConfirm(product) {\n    const alert = await this.alertCtrl.create({\n      header: 'Clear cart !',\n      message: '<strong>Are you sure you want to remove all items in your cart ?</strong>',\n      buttons: [\n        {\n          text: 'Cancel',\n          role: 'cancel',\n          cssClass: 'secondary',\n          handler: (blah) => {\n            console.log('Confirm Cancel: blah');\n          }\n        }, {\n          text: 'OK',\n          handler: () => {\n            this.orderService.removeProduct(product);\n          }\n        }\n      ]\n    });\n    await alert.present();\n  }\n  onclick() {\n    this.id = this.orderService.getRestaurantId().value;\n    this.router.navigate(['/menu/details/' + this.id]);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\n@Injectable({\n  providedIn: 'root'\n})\nexport class SharedService {\n  currentAddress = new BehaviorSubject<any>({});\n  restaurant = new BehaviorSubject<any>({});\n  status = new BehaviorSubject<any>({});\n  location = new BehaviorSubject<any>({});\n  orderId = new BehaviorSubject<any> ({});\n  RestaurantLocation = new BehaviorSubject<any>({});\n  resId = new BehaviorSubject<any>({});\n  listOfCatagoryFilter = new BehaviorSubject<any>({});\n  deriverId = new BehaviorSubject<any>({});\n  customerId = new BehaviorSubject<any>({});\n  driverName = new BehaviorSubject<any>({});\n\n  getCurrentAddress(){\n    return this.currentAddress;\n  }\n  getMenuFilter(){\n    return this.listOfCatagoryFilter;\n  }\n  getLocation(){\n    return this.location;\n  }\n  getStatus(){\n    return this.status;\n  }\n  getRestaurantLocation(){\n    return this.RestaurantLocation;\n  }\n  getRestaurantId(){\n    return this.resId;\n  }\n  getDriverId(){\n    return this.deriverId;\n  }\n  getCustomerId(){\n    return this.customerId;\n  }\n  getDriverName(){\n    return this.driverName;\n  }\n  constructor() { }\n}\n"]}